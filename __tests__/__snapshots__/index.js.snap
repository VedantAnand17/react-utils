// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Export at client side 1`] = `
Object {
  "Avatar": [Function],
  "BaseButton": [Function],
  "BaseModal": [Function],
  "Button": Object {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "Checkbox": Object {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "CodeSplit": [Function],
  "Dropdown": Object {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "GlobalStateProvider": [Function],
  "Input": Object {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "JU": null,
  "Link": [Function],
  "MetaTags": [Function],
  "Modal": Object {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "NavLink": [Function],
  "PT": Object {
    "PropTypes": Object {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "any": [Function],
    "array": [Function],
    "arrayOf": [Function],
    "bool": [Function],
    "checkPropTypes": [Function],
    "default": Object {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "element": [Function],
    "elementType": [Function],
    "exact": [Function],
    "func": [Function],
    "instanceOf": [Function],
    "node": [Function],
    "number": [Function],
    "object": [Function],
    "objectOf": [Function],
    "oneOf": [Function],
    "oneOfType": [Function],
    "resetWarningCache": [Function],
    "shape": [Function],
    "string": [Function],
    "symbol": [Function],
  },
  "PageLayout": Object {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "ScalableRect": [Function],
  "ThemeProvider": [Function],
  "Throbber": [Function],
  "WithTooltip": Object {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "_": [Function],
  "api": [Function],
  "client": [Function],
  "config": undefined,
  "hooks": Object {
    "useAsyncData": [Function],
    "useCallback": [Function],
    "useContext": [Function],
    "useDebugValue": [Function],
    "useEffect": [Function],
    "useGlobalState": [Function],
    "useImperativeHandle": [Function],
    "useLayoutEffect": [Function],
    "useMemo": [Function],
    "useReducer": [Function],
    "useRef": [Function],
    "useState": [Function],
  },
  "isomorphy": Object {
    "assertClientSide": [Function],
    "assertServerSide": [Function],
    "buildTimestamp": [Function],
    "getBuildInfo": [Function],
    "isClientSide": [Function],
    "isDevBuild": [Function],
    "isProdBuild": [Function],
    "isServerSide": [Function],
  },
  "server": null,
  "themed": [Function],
  "time": [Function],
  "url": Object {
    "default": null,
    "parent": [Function],
  },
  "webpack": Object {
    "requireWeak": [Function],
    "resolveWeak": [Function],
  },
}
`;

exports[`Export at client side 2`] = `
Object {
  "VERSION": "4.17.15",
  "_": [Function],
  "add": [Function],
  "after": [Function],
  "ary": [Function],
  "assign": [Function],
  "assignIn": [Function],
  "assignInWith": [Function],
  "assignWith": [Function],
  "at": [Function],
  "attempt": [Function],
  "before": [Function],
  "bind": [Function],
  "bindAll": [Function],
  "bindKey": [Function],
  "camelCase": [Function],
  "capitalize": [Function],
  "castArray": [Function],
  "ceil": [Function],
  "chain": [Function],
  "chunk": [Function],
  "clamp": [Function],
  "clone": [Function],
  "cloneDeep": [Function],
  "cloneDeepWith": [Function],
  "cloneWith": [Function],
  "compact": [Function],
  "concat": [Function],
  "cond": [Function],
  "conforms": [Function],
  "conformsTo": [Function],
  "constant": [Function],
  "countBy": [Function],
  "create": [Function],
  "curry": [Function],
  "curryRight": [Function],
  "debounce": [Function],
  "deburr": [Function],
  "defaultTo": [Function],
  "defaults": [Function],
  "defaultsDeep": [Function],
  "defer": [Function],
  "delay": [Function],
  "difference": [Function],
  "differenceBy": [Function],
  "differenceWith": [Function],
  "divide": [Function],
  "drop": [Function],
  "dropRight": [Function],
  "dropRightWhile": [Function],
  "dropWhile": [Function],
  "each": [Function],
  "eachRight": [Function],
  "endsWith": [Function],
  "entries": [Function],
  "entriesIn": [Function],
  "eq": [Function],
  "escape": [Function],
  "escapeRegExp": [Function],
  "every": [Function],
  "extend": [Function],
  "extendWith": [Function],
  "fill": [Function],
  "filter": [Function],
  "find": [Function],
  "findIndex": [Function],
  "findKey": [Function],
  "findLast": [Function],
  "findLastIndex": [Function],
  "findLastKey": [Function],
  "first": [Function],
  "flatMap": [Function],
  "flatMapDeep": [Function],
  "flatMapDepth": [Function],
  "flatten": [Function],
  "flattenDeep": [Function],
  "flattenDepth": [Function],
  "flip": [Function],
  "floor": [Function],
  "flow": [Function],
  "flowRight": [Function],
  "forEach": [Function],
  "forEachRight": [Function],
  "forIn": [Function],
  "forInRight": [Function],
  "forOwn": [Function],
  "forOwnRight": [Function],
  "fromPairs": [Function],
  "functions": [Function],
  "functionsIn": [Function],
  "get": [Function],
  "groupBy": [Function],
  "gt": [Function],
  "gte": [Function],
  "has": [Function],
  "hasIn": [Function],
  "head": [Function],
  "identity": [Function],
  "inRange": [Function],
  "includes": [Function],
  "indexOf": [Function],
  "initial": [Function],
  "intersection": [Function],
  "intersectionBy": [Function],
  "intersectionWith": [Function],
  "invert": [Function],
  "invertBy": [Function],
  "invoke": [Function],
  "invokeMap": [Function],
  "isArguments": [Function],
  "isArray": [Function],
  "isArrayBuffer": [Function],
  "isArrayLike": [Function],
  "isArrayLikeObject": [Function],
  "isBoolean": [Function],
  "isBuffer": [Function],
  "isDate": [Function],
  "isElement": [Function],
  "isEmpty": [Function],
  "isEqual": [Function],
  "isEqualWith": [Function],
  "isError": [Function],
  "isFinite": [Function],
  "isFunction": [Function],
  "isInteger": [Function],
  "isLength": [Function],
  "isMap": [Function],
  "isMatch": [Function],
  "isMatchWith": [Function],
  "isNaN": [Function],
  "isNative": [Function],
  "isNil": [Function],
  "isNull": [Function],
  "isNumber": [Function],
  "isObject": [Function],
  "isObjectLike": [Function],
  "isPlainObject": [Function],
  "isRegExp": [Function],
  "isSafeInteger": [Function],
  "isSet": [Function],
  "isString": [Function],
  "isSymbol": [Function],
  "isTypedArray": [Function],
  "isUndefined": [Function],
  "isWeakMap": [Function],
  "isWeakSet": [Function],
  "iteratee": [Function],
  "join": [Function],
  "kebabCase": [Function],
  "keyBy": [Function],
  "keys": [Function],
  "keysIn": [Function],
  "last": [Function],
  "lastIndexOf": [Function],
  "lowerCase": [Function],
  "lowerFirst": [Function],
  "lt": [Function],
  "lte": [Function],
  "map": [Function],
  "mapKeys": [Function],
  "mapValues": [Function],
  "matches": [Function],
  "matchesProperty": [Function],
  "max": [Function],
  "maxBy": [Function],
  "mean": [Function],
  "meanBy": [Function],
  "memoize": [Function],
  "merge": [Function],
  "mergeWith": [Function],
  "method": [Function],
  "methodOf": [Function],
  "min": [Function],
  "minBy": [Function],
  "mixin": [Function],
  "multiply": [Function],
  "negate": [Function],
  "noConflict": [Function],
  "noop": [Function],
  "now": [Function],
  "nth": [Function],
  "nthArg": [Function],
  "omit": [Function],
  "omitBy": [Function],
  "once": [Function],
  "orderBy": [Function],
  "over": [Function],
  "overArgs": [Function],
  "overEvery": [Function],
  "overSome": [Function],
  "pad": [Function],
  "padEnd": [Function],
  "padStart": [Function],
  "parseInt": [Function],
  "partial": [Function],
  "partialRight": [Function],
  "partition": [Function],
  "pick": [Function],
  "pickBy": [Function],
  "property": [Function],
  "propertyOf": [Function],
  "pull": [Function],
  "pullAll": [Function],
  "pullAllBy": [Function],
  "pullAllWith": [Function],
  "pullAt": [Function],
  "random": [Function],
  "range": [Function],
  "rangeRight": [Function],
  "rearg": [Function],
  "reduce": [Function],
  "reduceRight": [Function],
  "reject": [Function],
  "remove": [Function],
  "repeat": [Function],
  "replace": [Function],
  "rest": [Function],
  "result": [Function],
  "reverse": [Function],
  "round": [Function],
  "runInContext": [Function],
  "sample": [Function],
  "sampleSize": [Function],
  "set": [Function],
  "setWith": [Function],
  "shuffle": [Function],
  "size": [Function],
  "slice": [Function],
  "snakeCase": [Function],
  "some": [Function],
  "sortBy": [Function],
  "sortedIndex": [Function],
  "sortedIndexBy": [Function],
  "sortedIndexOf": [Function],
  "sortedLastIndex": [Function],
  "sortedLastIndexBy": [Function],
  "sortedLastIndexOf": [Function],
  "sortedUniq": [Function],
  "sortedUniqBy": [Function],
  "split": [Function],
  "spread": [Function],
  "startCase": [Function],
  "startsWith": [Function],
  "stubArray": [Function],
  "stubFalse": [Function],
  "stubObject": [Function],
  "stubString": [Function],
  "stubTrue": [Function],
  "subtract": [Function],
  "sum": [Function],
  "sumBy": [Function],
  "tail": [Function],
  "take": [Function],
  "takeRight": [Function],
  "takeRightWhile": [Function],
  "takeWhile": [Function],
  "tap": [Function],
  "template": [Function],
  "templateSettings": Object {
    "escape": /<%-\\(\\[\\\\s\\\\S\\]\\+\\?\\)%>/g,
    "evaluate": /<%\\(\\[\\\\s\\\\S\\]\\+\\?\\)%>/g,
    "imports": Object {
      "_": [Function],
    },
    "interpolate": /<%=\\(\\[\\\\s\\\\S\\]\\+\\?\\)%>/g,
    "variable": "",
  },
  "throttle": [Function],
  "thru": [Function],
  "times": [Function],
  "toArray": [Function],
  "toFinite": [Function],
  "toInteger": [Function],
  "toLength": [Function],
  "toLower": [Function],
  "toNumber": [Function],
  "toPairs": [Function],
  "toPairsIn": [Function],
  "toPath": [Function],
  "toPlainObject": [Function],
  "toSafeInteger": [Function],
  "toString": [Function],
  "toUpper": [Function],
  "transform": [Function],
  "trim": [Function],
  "trimEnd": [Function],
  "trimStart": [Function],
  "truncate": [Function],
  "unary": [Function],
  "unescape": [Function],
  "union": [Function],
  "unionBy": [Function],
  "unionWith": [Function],
  "uniq": [Function],
  "uniqBy": [Function],
  "uniqWith": [Function],
  "uniqueId": [Function],
  "unset": [Function],
  "unzip": [Function],
  "unzipWith": [Function],
  "update": [Function],
  "updateWith": [Function],
  "upperCase": [Function],
  "upperFirst": [Function],
  "values": [Function],
  "valuesIn": [Function],
  "without": [Function],
  "words": [Function],
  "wrap": [Function],
  "xor": [Function],
  "xorBy": [Function],
  "xorWith": [Function],
  "zip": [Function],
  "zipObject": [Function],
  "zipObjectDeep": [Function],
  "zipWith": [Function],
}
`;

exports[`Export at client side 3`] = `
Object {
  "Axios": [Function],
  "Cancel": [Function],
  "CancelToken": [Function],
  "all": [Function],
  "create": [Function],
  "default": [Function],
  "defaults": Object {
    "adapter": [Function],
    "headers": Object {
      "common": Object {
        "Accept": "application/json, text/plain, */*",
      },
      "delete": Object {},
      "get": Object {},
      "head": Object {},
      "patch": Object {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      "post": Object {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      "put": Object {
        "Content-Type": "application/x-www-form-urlencoded",
      },
    },
    "maxContentLength": -1,
    "timeout": 0,
    "transformRequest": Array [
      [Function],
    ],
    "transformResponse": Array [
      [Function],
    ],
    "validateStatus": [Function],
    "xsrfCookieName": "XSRF-TOKEN",
    "xsrfHeaderName": "X-XSRF-TOKEN",
  },
  "delete": [Function],
  "get": [Function],
  "getUri": [Function],
  "head": [Function],
  "interceptors": Object {
    "request": InterceptorManager {
      "handlers": Array [],
    },
    "response": InterceptorManager {
      "handlers": Array [],
    },
  },
  "isCancel": [Function],
  "options": [Function],
  "patch": [Function],
  "post": [Function],
  "put": [Function],
  "request": [Function],
  "spread": [Function],
}
`;

exports[`Export at client side 4`] = `
Array [
  "momentProperties",
  "suppressDeprecationWarnings",
  "deprecationHandler",
  "parseTwoDigitYear",
  "createFromInputFallback",
  "ISO_8601",
  "RFC_2822",
  "updateOffset",
  "defaultFormat",
  "defaultFormatUtc",
  "lang",
  "langData",
  "version",
  "fn",
  "min",
  "max",
  "now",
  "utc",
  "unix",
  "months",
  "isDate",
  "locale",
  "invalid",
  "duration",
  "isMoment",
  "weekdays",
  "parseZone",
  "localeData",
  "isDuration",
  "monthsShort",
  "weekdaysMin",
  "defineLocale",
  "updateLocale",
  "locales",
  "weekdaysShort",
  "normalizeUnits",
  "relativeTimeRounding",
  "relativeTimeThreshold",
  "calendarFormat",
  "HTML5_FMT",
  "SEC_MS",
  "MIN_MS",
  "HOUR_MS",
  "DAY_MS",
  "YEAR_MS",
  "timer",
]
`;
