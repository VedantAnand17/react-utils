// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Export at client side 1`] = `
Object {
  "AppChunk": [Function],
  "Avatar": [Function],
  "BaseModal": [Function],
  "Button": [Function],
  "DevTools": [Function],
  "JU": null,
  "Link": [Function],
  "MetaTags": Object {
    "$$typeof": Symbol(react.memo),
    "WrappedComponent": [Function],
    "compare": null,
    "displayName": "Connect(MetaTags)",
    "type": [Function],
  },
  "Modal": [Function],
  "NavLink": [Function],
  "PT": Object {
    "PropTypes": Object {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "any": [Function],
    "array": [Function],
    "arrayOf": [Function],
    "bool": [Function],
    "checkPropTypes": [Function],
    "default": Object {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "element": [Function],
    "elementType": [Function],
    "exact": [Function],
    "func": [Function],
    "instanceOf": [Function],
    "node": [Function],
    "number": [Function],
    "object": [Function],
    "objectOf": [Function],
    "oneOf": [Function],
    "oneOfType": [Function],
    "resetWarningCache": [Function],
    "shape": [Function],
    "string": [Function],
    "symbol": [Function],
  },
  "ScalableRect": [Function],
  "Throbber": [Function],
  "Tooltip": [Function],
  "actions": Object {
    "collection": Object {
      "addItems": [Function],
      "bookItems": [Function],
      "clean": [Function],
      "freeItems": [Function],
      "loadItemDone": [Function],
      "loadItemInit": [Function],
    },
    "item": Object {
      "dropData": [Function],
      "loadDataDone": [Function],
      "loadDataInit": [Function],
      "setData": [Function],
      "updateReferenceCounter": [Function],
    },
  },
  "api": Object {
    "Axios": [Function],
    "Cancel": [Function],
    "CancelToken": [Function],
    "all": [Function],
    "create": [Function],
    "default": [Function],
    "defaults": Object {
      "adapter": [Function],
      "headers": Object {
        "common": Object {
          "Accept": "application/json, text/plain, */*",
        },
        "delete": Object {},
        "get": Object {},
        "head": Object {},
        "patch": Object {
          "Content-Type": "application/x-www-form-urlencoded",
        },
        "post": Object {
          "Content-Type": "application/x-www-form-urlencoded",
        },
        "put": Object {
          "Content-Type": "application/x-www-form-urlencoded",
        },
      },
      "maxContentLength": -1,
      "timeout": 0,
      "transformRequest": Array [
        [Function],
      ],
      "transformResponse": Array [
        [Function],
      ],
      "validateStatus": [Function],
      "xsrfCookieName": "XSRF-TOKEN",
      "xsrfHeaderName": "X-XSRF-TOKEN",
    },
    "delete": [Function],
    "get": [Function],
    "getUri": [Function],
    "head": [Function],
    "interceptors": Object {
      "request": InterceptorManager {
        "handlers": Array [],
      },
      "response": InterceptorManager {
        "handlers": Array [],
      },
    },
    "isCancel": [Function],
    "options": [Function],
    "patch": [Function],
    "post": [Function],
    "put": [Function],
    "request": [Function],
    "spread": [Function],
  },
  "client": [Function],
  "config": undefined,
  "isomorphy": Object {
    "buildTimestamp": [Function],
    "isClientSide": [Function],
    "isDevBuild": [Function],
    "isProdBuild": [Function],
    "isServerSide": [Function],
  },
  "reducers": Object {
    "collection": [Function],
    "item": [Function],
  },
  "redux": Object {
    "combineReducers": [Function],
    "connect": [Function],
    "createActions": [Function],
    "handleActions": [Function],
    "proxyAction": [Function],
    "proxyReducer": [Function],
    "resolveAction": [Function],
    "resolveReducers": [Function],
    "storeFactory": [Function],
  },
  "server": null,
  "time": [Function],
  "url": Object {
    "default": null,
    "parent": [Function],
  },
  "webpack": Object {
    "requireWeak": [Function],
    "resolveWeak": [Function],
  },
}
`;

exports[`Export at client side 2`] = `[Function]`;

exports[`Export at server side 1`] = `
Object {
  "AppChunk": [Function],
  "Avatar": [Function],
  "BaseModal": [Function],
  "Button": [Function],
  "DevTools": [Function],
  "JU": Object {
    "findInDomByClass": [Function],
    "findInDomManyByClass": [Function],
    "render": [Function],
    "renderDom": [Function],
    "shallowRender": [Function],
    "shallowSnapshot": [Function],
    "simulate": Object {
      "abort": [Function],
      "animationEnd": [Function],
      "animationIteration": [Function],
      "animationStart": [Function],
      "auxClick": [Function],
      "beforeInput": [Function],
      "blur": [Function],
      "canPlay": [Function],
      "canPlayThrough": [Function],
      "cancel": [Function],
      "change": [Function],
      "click": [Function],
      "close": [Function],
      "compositionEnd": [Function],
      "compositionStart": [Function],
      "compositionUpdate": [Function],
      "contextMenu": [Function],
      "copy": [Function],
      "cut": [Function],
      "doubleClick": [Function],
      "drag": [Function],
      "dragEnd": [Function],
      "dragEnter": [Function],
      "dragExit": [Function],
      "dragLeave": [Function],
      "dragOver": [Function],
      "dragStart": [Function],
      "drop": [Function],
      "durationChange": [Function],
      "emptied": [Function],
      "encrypted": [Function],
      "ended": [Function],
      "error": [Function],
      "focus": [Function],
      "gotPointerCapture": [Function],
      "input": [Function],
      "invalid": [Function],
      "keyDown": [Function],
      "keyPress": [Function],
      "keyUp": [Function],
      "load": [Function],
      "loadStart": [Function],
      "loadedData": [Function],
      "loadedMetadata": [Function],
      "lostPointerCapture": [Function],
      "mouseDown": [Function],
      "mouseEnter": [Function],
      "mouseLeave": [Function],
      "mouseMove": [Function],
      "mouseOut": [Function],
      "mouseOver": [Function],
      "mouseUp": [Function],
      "paste": [Function],
      "pause": [Function],
      "play": [Function],
      "playing": [Function],
      "pointerCancel": [Function],
      "pointerDown": [Function],
      "pointerEnter": [Function],
      "pointerLeave": [Function],
      "pointerMove": [Function],
      "pointerOut": [Function],
      "pointerOver": [Function],
      "pointerUp": [Function],
      "progress": [Function],
      "rateChange": [Function],
      "reset": [Function],
      "scroll": [Function],
      "seeked": [Function],
      "seeking": [Function],
      "select": [Function],
      "stalled": [Function],
      "submit": [Function],
      "suspend": [Function],
      "timeUpdate": [Function],
      "toggle": [Function],
      "touchCancel": [Function],
      "touchEnd": [Function],
      "touchMove": [Function],
      "touchStart": [Function],
      "transitionEnd": [Function],
      "volumeChange": [Function],
      "waiting": [Function],
      "wheel": [Function],
    },
    "snapshot": [Function],
  },
  "Link": [Function],
  "MetaTags": Object {
    "$$typeof": Symbol(react.memo),
    "WrappedComponent": [Function],
    "compare": null,
    "displayName": "Connect(MetaTags)",
    "type": [Function],
  },
  "Modal": [Function],
  "NavLink": [Function],
  "PT": Object {
    "PropTypes": Object {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "any": [Function],
    "array": [Function],
    "arrayOf": [Function],
    "bool": [Function],
    "checkPropTypes": [Function],
    "default": Object {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "element": [Function],
    "elementType": [Function],
    "exact": [Function],
    "func": [Function],
    "instanceOf": [Function],
    "node": [Function],
    "number": [Function],
    "object": [Function],
    "objectOf": [Function],
    "oneOf": [Function],
    "oneOfType": [Function],
    "resetWarningCache": [Function],
    "shape": [Function],
    "string": [Function],
    "symbol": [Function],
  },
  "ScalableRect": [Function],
  "Throbber": [Function],
  "Tooltip": [Function],
  "actions": Object {
    "collection": Object {
      "addItems": [Function],
      "bookItems": [Function],
      "clean": [Function],
      "freeItems": [Function],
      "loadItemDone": [Function],
      "loadItemInit": [Function],
    },
    "item": Object {
      "dropData": [Function],
      "loadDataDone": [Function],
      "loadDataInit": [Function],
      "setData": [Function],
      "updateReferenceCounter": [Function],
    },
  },
  "api": Object {
    "Axios": [Function],
    "Cancel": [Function],
    "CancelToken": [Function],
    "all": [Function],
    "create": [Function],
    "default": [Function],
    "defaults": Object {
      "adapter": [Function],
      "headers": Object {
        "common": Object {
          "Accept": "application/json, text/plain, */*",
        },
        "delete": Object {},
        "get": Object {},
        "head": Object {},
        "patch": Object {
          "Content-Type": "application/x-www-form-urlencoded",
        },
        "post": Object {
          "Content-Type": "application/x-www-form-urlencoded",
        },
        "put": Object {
          "Content-Type": "application/x-www-form-urlencoded",
        },
      },
      "maxContentLength": -1,
      "timeout": 0,
      "transformRequest": Array [
        [Function],
      ],
      "transformResponse": Array [
        [Function],
      ],
      "validateStatus": [Function],
      "xsrfCookieName": "XSRF-TOKEN",
      "xsrfHeaderName": "X-XSRF-TOKEN",
    },
    "delete": [Function],
    "get": [Function],
    "getUri": [Function],
    "head": [Function],
    "interceptors": Object {
      "request": InterceptorManager {
        "handlers": Array [],
      },
      "response": InterceptorManager {
        "handlers": Array [],
      },
    },
    "isCancel": [Function],
    "options": [Function],
    "patch": [Function],
    "post": [Function],
    "put": [Function],
    "request": [Function],
    "spread": [Function],
  },
  "client": [Function],
  "config": Config {
    "SECRET": Object {
      "dummySecretKey": "Dummy Secret Value",
    },
    "dummyKey": "Dummy Value",
  },
  "isomorphy": Object {
    "buildTimestamp": [Function],
    "isClientSide": [Function],
    "isDevBuild": [Function],
    "isProdBuild": [Function],
    "isServerSide": [Function],
  },
  "reducers": Object {
    "collection": [Function],
    "item": [Function],
  },
  "redux": Object {
    "combineReducers": [Function],
    "connect": [Function],
    "createActions": [Function],
    "handleActions": [Function],
    "proxyAction": [Function],
    "proxyReducer": [Function],
    "resolveAction": [Function],
    "resolveReducers": [Function],
    "storeFactory": [Function],
  },
  "server": [Function],
  "time": [Function],
  "url": Object {
    "default": null,
    "parent": [Function],
  },
  "webpack": Object {
    "requireWeak": [Function],
    "resolveWeak": [Function],
  },
}
`;

exports[`Export at server side 2`] = `[Function]`;
