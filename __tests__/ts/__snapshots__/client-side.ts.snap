// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Export at client side 1`] = `
{
  "Barrier": [Function],
  "BaseButton": [Function],
  "BaseModal": [Function],
  "Button": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "Checkbox": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "CustomDropdown": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "Dropdown": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "Emitter": [Function],
  "GlobalStateProvider": [Function],
  "Input": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "Link": [Function],
  "MetaTags": [Function],
  "Modal": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "NavLink": [Function],
  "PT": {
    "PropTypes": {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bigint": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "any": [Function],
    "array": [Function],
    "arrayOf": [Function],
    "bigint": [Function],
    "bool": [Function],
    "checkPropTypes": [Function],
    "default": {
      "PropTypes": [Circular],
      "any": [Function],
      "array": [Function],
      "arrayOf": [Function],
      "bigint": [Function],
      "bool": [Function],
      "checkPropTypes": [Function],
      "element": [Function],
      "elementType": [Function],
      "exact": [Function],
      "func": [Function],
      "instanceOf": [Function],
      "node": [Function],
      "number": [Function],
      "object": [Function],
      "objectOf": [Function],
      "oneOf": [Function],
      "oneOfType": [Function],
      "resetWarningCache": [Function],
      "shape": [Function],
      "string": [Function],
      "symbol": [Function],
    },
    "element": [Function],
    "elementType": [Function],
    "exact": [Function],
    "func": [Function],
    "instanceOf": [Function],
    "node": [Function],
    "number": [Function],
    "object": [Function],
    "objectOf": [Function],
    "oneOf": [Function],
    "oneOfType": [Function],
    "resetWarningCache": [Function],
    "shape": [Function],
    "string": [Function],
    "symbol": [Function],
  },
  "PageLayout": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "Semaphore": [Function],
  "Switch": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "TextArea": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "ThemeProvider": [Function],
  "Throbber": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "WithTooltip": {
    "$$typeof": Symbol(react.forward_ref),
    "PLACEMENTS": {
      "ABOVE_CURSOR": "ABOVE_CURSOR",
      "ABOVE_ELEMENT": "ABOVE_ELEMENT",
      "BELOW_CURSOR": "BELOW_CURSOR",
      "BELOW_ELEMENT": "BELOW_ELEMENT",
    },
    "render": [Function],
    "themeType": [Function],
  },
  "YouTubeVideo": {
    "$$typeof": Symbol(react.forward_ref),
    "render": [Function],
    "themeType": [Function],
  },
  "api": [Function],
  "client": [Function],
  "config": {
    "CSRF": undefined,
    "MOCK_CONFIG_KEY": "Mock Config Value",
  },
  "getGlobalState": [Function],
  "getSsrContext": [Function],
  "isomorphy": {
    "IS_CLIENT_SIDE": true,
    "IS_SERVER_SIDE": false,
    "buildTimestamp": [Function],
    "getBuildInfo": [Function],
    "isDevBuild": [Function],
    "isProdBuild": [Function],
  },
  "newAsyncDataEnvelope": [Function],
  "optionValidator": [Function],
  "optionsValidator": [Function],
  "server": null,
  "splitComponent": [Function],
  "themed": [Function],
  "time": [Function],
  "useAsyncCollection": [Function],
  "useAsyncData": [Function],
  "useGlobalState": [Function],
  "webpack": {
    "requireWeak": [Function],
    "resolveWeak": [Function],
  },
  "withGlobalStateType": [Function],
  "withRetries": [Function],
}
`;

exports[`Export at client side 2`] = `{}`;

exports[`Export at client side 3`] = `
wrap {
  "Axios": [Function],
  "AxiosError": [Function],
  "AxiosHeaders": [Function],
  "Cancel": [Function],
  "CancelToken": [Function],
  "CanceledError": [Function],
  "HttpStatusCode": {
    "100": "Continue",
    "101": "SwitchingProtocols",
    "102": "Processing",
    "103": "EarlyHints",
    "200": "Ok",
    "201": "Created",
    "202": "Accepted",
    "203": "NonAuthoritativeInformation",
    "204": "NoContent",
    "205": "ResetContent",
    "206": "PartialContent",
    "207": "MultiStatus",
    "208": "AlreadyReported",
    "226": "ImUsed",
    "300": "MultipleChoices",
    "301": "MovedPermanently",
    "302": "Found",
    "303": "SeeOther",
    "304": "NotModified",
    "305": "UseProxy",
    "306": "Unused",
    "307": "TemporaryRedirect",
    "308": "PermanentRedirect",
    "400": "BadRequest",
    "401": "Unauthorized",
    "402": "PaymentRequired",
    "403": "Forbidden",
    "404": "NotFound",
    "405": "MethodNotAllowed",
    "406": "NotAcceptable",
    "407": "ProxyAuthenticationRequired",
    "408": "RequestTimeout",
    "409": "Conflict",
    "410": "Gone",
    "411": "LengthRequired",
    "412": "PreconditionFailed",
    "413": "PayloadTooLarge",
    "414": "UriTooLong",
    "415": "UnsupportedMediaType",
    "416": "RangeNotSatisfiable",
    "417": "ExpectationFailed",
    "418": "ImATeapot",
    "421": "MisdirectedRequest",
    "422": "UnprocessableEntity",
    "423": "Locked",
    "424": "FailedDependency",
    "425": "TooEarly",
    "426": "UpgradeRequired",
    "428": "PreconditionRequired",
    "429": "TooManyRequests",
    "431": "RequestHeaderFieldsTooLarge",
    "451": "UnavailableForLegalReasons",
    "500": "InternalServerError",
    "501": "NotImplemented",
    "502": "BadGateway",
    "503": "ServiceUnavailable",
    "504": "GatewayTimeout",
    "505": "HttpVersionNotSupported",
    "506": "VariantAlsoNegotiates",
    "507": "InsufficientStorage",
    "508": "LoopDetected",
    "510": "NotExtended",
    "511": "NetworkAuthenticationRequired",
    "Accepted": 202,
    "AlreadyReported": 208,
    "BadGateway": 502,
    "BadRequest": 400,
    "Conflict": 409,
    "Continue": 100,
    "Created": 201,
    "EarlyHints": 103,
    "ExpectationFailed": 417,
    "FailedDependency": 424,
    "Forbidden": 403,
    "Found": 302,
    "GatewayTimeout": 504,
    "Gone": 410,
    "HttpVersionNotSupported": 505,
    "ImATeapot": 418,
    "ImUsed": 226,
    "InsufficientStorage": 507,
    "InternalServerError": 500,
    "LengthRequired": 411,
    "Locked": 423,
    "LoopDetected": 508,
    "MethodNotAllowed": 405,
    "MisdirectedRequest": 421,
    "MovedPermanently": 301,
    "MultiStatus": 207,
    "MultipleChoices": 300,
    "NetworkAuthenticationRequired": 511,
    "NoContent": 204,
    "NonAuthoritativeInformation": 203,
    "NotAcceptable": 406,
    "NotExtended": 510,
    "NotFound": 404,
    "NotImplemented": 501,
    "NotModified": 304,
    "Ok": 200,
    "PartialContent": 206,
    "PayloadTooLarge": 413,
    "PaymentRequired": 402,
    "PermanentRedirect": 308,
    "PreconditionFailed": 412,
    "PreconditionRequired": 428,
    "Processing": 102,
    "ProxyAuthenticationRequired": 407,
    "RangeNotSatisfiable": 416,
    "RequestHeaderFieldsTooLarge": 431,
    "RequestTimeout": 408,
    "ResetContent": 205,
    "SeeOther": 303,
    "ServiceUnavailable": 503,
    "SwitchingProtocols": 101,
    "TemporaryRedirect": 307,
    "TooEarly": 425,
    "TooManyRequests": 429,
    "Unauthorized": 401,
    "UnavailableForLegalReasons": 451,
    "UnprocessableEntity": 422,
    "UnsupportedMediaType": 415,
    "Unused": 306,
    "UpgradeRequired": 426,
    "UriTooLong": 414,
    "UseProxy": 305,
    "VariantAlsoNegotiates": 506,
  },
  "VERSION": "1.7.2",
  "_request": [Function],
  "all": [Function],
  "constructor": [Function],
  "create": [Function],
  "default": [Function],
  "defaults": {
    "adapter": [
      "xhr",
      "http",
      "fetch",
    ],
    "env": {
      "Blob": [Function],
      "FormData": [Function],
    },
    "headers": {
      "common": {
        "Accept": "application/json, text/plain, */*",
        "Content-Type": undefined,
      },
      "delete": {},
      "get": {},
      "head": {},
      "patch": {},
      "post": {},
      "put": {},
    },
    "maxBodyLength": -1,
    "maxContentLength": -1,
    "timeout": 0,
    "transformRequest": [
      [Function],
    ],
    "transformResponse": [
      [Function],
    ],
    "transitional": {
      "clarifyTimeoutError": false,
      "forcedJSONParsing": true,
      "silentJSONParsing": true,
    },
    "validateStatus": [Function],
    "xsrfCookieName": "XSRF-TOKEN",
    "xsrfHeaderName": "X-XSRF-TOKEN",
  },
  "delete": [Function],
  "formToJSON": [Function],
  "get": [Function],
  "getAdapter": [Function],
  "getUri": [Function],
  "head": [Function],
  "interceptors": {
    "request": InterceptorManager {
      "handlers": [],
    },
    "response": InterceptorManager {
      "handlers": [],
    },
  },
  "isAxiosError": [Function],
  "isCancel": [Function],
  "mergeConfig": [Function],
  "options": [Function],
  "patch": [Function],
  "patchForm": [Function],
  "post": [Function],
  "postForm": [Function],
  "put": [Function],
  "putForm": [Function],
  "request": [Function],
  "spread": [Function],
  "toFormData": [Function],
}
`;

exports[`Export at client side 4`] = `
[
  "extend",
  "locale",
  "isDayjs",
  "unix",
  "en",
  "Ls",
  "p",
  "DAY_MS",
  "HOUR_MS",
  "MIN_MS",
  "SEC_MS",
  "YEAR_MS",
  "now",
  "timer",
  "useCurrent",
  "useTimezoneOffset",
]
`;
